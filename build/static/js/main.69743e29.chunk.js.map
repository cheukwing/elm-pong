{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","_Utils_Tuple2","_Debug_crash","key","elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_Tuple3","_Utils_update","oldRecord","updatedFields","newRecord","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","identifier","Error","_Basics_cos","Math","cos","_Basics_sin","sin","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_log","log","_String_fromNumber","number","_Json_decodePrim","decoder","value","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","_Json_decodeString","String","_Json_decodeField","field","_Json_map1","d1","decoders","g","_Json_mapMany","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","index","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","h","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","array","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_VirtualDom_divertHrefToApp","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","handler","message","t","stopPropagation","ac","currentEventNode","aa","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aP","aY","aW","initialModel","view","a_","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","_Browser_cancelAnimationFrame","cancelAnimationFrame","id","clearTimeout","requestAnimationFrame","setTimeout","_Browser_fakeNode","_Browser_doc","_Browser_window","_Browser_on","eventName","sendToSelf","_Browser_decodeEvent","elm$core$Maybe$Just","elm$core$Maybe$Nothing","elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","elm$core$List$cons","dict","author$project$Main$initialBallPosition","author$project$Main$gameWidth","author$project$Main$gameHeight","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","xs","elm$core$Array$compressNodes","nodes","_n0","remainingNodes","newAcc","elm$core$Tuple$first","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","elm$core$String$fromInt","elm$core$Platform$Cmd$none","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$core$Set$empty","author$project$Main$init","N","O","author$project$Main$KeyDown","author$project$Main$KeyUp","author$project$Main$UpdateState","author$project$Main$keyDecoder","elm$browser$Browser$AnimationManager$Time","elm$browser$Browser$AnimationManager$State","subs","request","oldTime","_","ax","aA","elm$core$Task$succeed","elm$browser$Browser$AnimationManager$init","elm$core$Task$init","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","elm$core$Task$andThen","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Task$sequence","tasks","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","commands","elm$json$Json$Decode$map","elm$browser$Browser$AnimationManager$now","Date","now","elm$browser$Browser$AnimationManager$rAF","elm$core$Platform$sendToSelf","elm$core$Process$kill","elm$core$Process$spawn","elm$browser$Browser$AnimationManager$onEffects","_n1","pid","time","elm$time$Time$millisToPosix","elm$browser$Browser$AnimationManager$onSelfMsg","newTime","send","sub","elm$core$Basics$composeL","elm$browser$Browser$AnimationManager$subscription","elm$browser$Browser$Events$MySub","elm$browser$Browser$Events$State","pids","aq","elm$browser$Browser$Events$init","elm$browser$Browser$Events$addKey","ys","root","curr","_Utils_ap","elm$browser$Browser$Events$Event","ah","al","elm$browser$Browser$Events$spawn","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","right","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Dict$fromList","assocs","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","_n3","rKey","rValue","stepState","_n2","lKey","lValue","rest","leftovers","intermediateResult","_n4","elm$core$Dict$union","t1","t2","elm$browser$Browser$Events$onEffects","stepRight","news","stepLeft","_n5","lives","stepBoth","newSubs","livePids","makeNewPids","elm$core$List$maybeCons","mx","elm$core$List$filterMap","messages","exports","elm$browser$Browser$Events$subscription","elm$browser$Browser$Events$on","elm$browser$Browser$Events$onKeyDown","elm$browser$Browser$Events$onKeyUp","elm$core$Platform$Sub$batch","elm$core$Basics$min","elm$core$Dict$get","targetKey","elm$core$Dict$member","elm$core$Set$member","author$project$Main$getPaddlePositions","getPosition","getDirection","up","down","dTwo","author$project$Main$getBallPosition","px","dx","ny","elm$core$List$filter","isGood","elm$core$Tuple$second","elm$core$Basics$cos","elm$core$Basics$degrees","angleInDegrees","elm$core$Basics$sin","author$project$Main$getReflection","intersection","yReflect","relative","xReflect","by","relativeLeft","author$project$Main$paddleHeight","relativeRight","elm$core$Set$insert","elm$core$Dict$moveRedLeft","rlL","rlR","elm$core$Dict$moveRedRight","elm$core$Dict$removeHelpPrepEQGT","F7","_n2$2","elm$core$Dict$removeMin","lLeft","elm$core$Dict$removeHelp","_n7","elm$core$Dict$removeHelpEQGT","elm$core$Dict$getMin","elm$core$Dict$remove","elm$core$Set$remove","author$project$Main$update","pb","pw","ph","bx","intersectsBall","intersectionChecks","author$project$Main$getIntersection","rd","initial","movedPaddles","db","dy","author$project$Main$updateState","elm$core$String$fromFloat","elm$html$Html$div","elm$html$Html$h1","elm$virtual_dom$VirtualDom$text","elm$html$Html$text","elm$svg$Svg$trustedNode","elm$svg$Svg$circle","elm$svg$Svg$rect","elm$svg$Svg$svg","elm$svg$Svg$text","elm$svg$Svg$text_","elm$svg$Svg$Attributes$cx","elm$svg$Svg$Attributes$cy","elm$svg$Svg$Attributes$fontSize","elm$svg$Svg$Attributes$height","elm$svg$Svg$Attributes$r","elm$svg$Svg$Attributes$viewBox","elm$svg$Svg$Attributes$width","elm$svg$Svg$Attributes$x","elm$svg$Svg$Attributes$y","Main","author$project$Main$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","error","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.69743e29.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ab.K === region.ag.K)\n\t{\n\t\treturn 'on line ' + region.ab.K;\n\t}\n\treturn 'on lines ' + region.ab.K + ' through ' + region.ag.K;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aP,\n\t\timpl.aY,\n\t\timpl.aW,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tt: func(record.t),\n\t\tac: record.ac,\n\t\taa: record.aa\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.t;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.ac;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.aa) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aP,\n\t\timpl.aY,\n\t\timpl.aW,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a_;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aP,\n\t\timpl.aY,\n\t\timpl.aW,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.P && impl.P(sendToApp)\n\t\t\tvar view = impl.a_;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aG);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.aX) && (_VirtualDom_doc.title = title = doc.aX);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aS;\n\tvar onUrlRequest = impl.aT;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tP: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.au === next.au\n\t\t\t\t\t\t\t&& curr.ak === next.ak\n\t\t\t\t\t\t\t&& curr.ar.a === next.ar.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taP: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aP, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta_: impl.a_,\n\t\taY: impl.aY,\n\t\taW: impl.aW\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aN: 'hidden', aH: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aN: 'mozHidden', aH: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aN: 'msHidden', aH: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aN: 'webkitHidden', aH: 'webkitvisibilitychange' }\n\t\t: { aN: 'hidden', aH: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taz: _Browser_getScene(),\n\t\taC: {\n\t\t\tX: _Browser_window.pageXOffset,\n\t\t\tY: _Browser_window.pageYOffset,\n\t\t\tI: _Browser_doc.documentElement.clientWidth,\n\t\t\tD: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tI: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tD: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taz: {\n\t\t\t\tI: node.scrollWidth,\n\t\t\t\tD: node.scrollHeight\n\t\t\t},\n\t\t\taC: {\n\t\t\t\tX: node.scrollLeft,\n\t\t\t\tY: node.scrollTop,\n\t\t\t\tI: node.clientWidth,\n\t\t\t\tD: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taz: _Browser_getScene(),\n\t\t\taC: {\n\t\t\t\tX: x,\n\t\t\t\tY: y,\n\t\t\t\tI: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tD: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taI: {\n\t\t\t\tX: x + rect.left,\n\t\t\t\tY: y + rect.top,\n\t\t\t\tI: rect.width,\n\t\t\t\tD: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Main$gameHeight = 500;\nvar author$project$Main$gameWidth = 500;\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$GT = 2;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar author$project$Main$initialBallPosition = _Utils_Tuple2(author$project$Main$gameWidth / 2, author$project$Main$gameHeight / 2);\nvar author$project$Main$paddleHeight = 100;\nvar elm$core$Basics$sub = _Basics_sub;\nvar author$project$Main$initialPosition = (author$project$Main$gameHeight / 2) - (author$project$Main$paddleHeight / 2);\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Set$Set_elm_builtin = elm$core$Basics$identity;\nvar elm$core$Set$empty = elm$core$Dict$empty;\nvar author$project$Main$init = _Utils_Tuple2(\n\t{\n\t\tr: _Utils_Tuple2(1, 0),\n\t\ts: elm$core$Set$empty,\n\t\tn: author$project$Main$initialBallPosition,\n\t\tv: author$project$Main$initialPosition,\n\t\tw: author$project$Main$initialPosition,\n\t\tN: 0,\n\t\tO: 0\n\t},\n\telm$core$Platform$Cmd$none);\nvar author$project$Main$KeyDown = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Main$KeyUp = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$Main$UpdateState = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar author$project$Main$keyDecoder = A2(elm$json$Json$Decode$field, 'key', elm$json$Json$Decode$string);\nvar elm$browser$Browser$AnimationManager$Time = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$AnimationManager$State = F3(\n\tfunction (subs, request, oldTime) {\n\t\treturn {_: oldTime, ax: request, aA: subs};\n\t});\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$browser$Browser$AnimationManager$init = elm$core$Task$succeed(\n\tA3(elm$browser$Browser$AnimationManager$State, _List_Nil, elm$core$Maybe$Nothing, 0));\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {ai: fragment, ak: host, ap: path, ar: port_, au: protocol, av: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$AnimationManager$now = _Browser_now(0);\nvar elm$browser$Browser$AnimationManager$rAF = _Browser_rAF(0);\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$browser$Browser$AnimationManager$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar request = _n0.ax;\n\t\tvar oldTime = _n0._;\n\t\tvar _n1 = _Utils_Tuple2(request, subs);\n\t\tif (_n1.a.$ === 1) {\n\t\t\tif (!_n1.b.b) {\n\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\treturn elm$browser$Browser$AnimationManager$init;\n\t\t\t} else {\n\t\t\t\tvar _n4 = _n1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (pid) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (time) {\n\t\t\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$State,\n\t\t\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\t\t\telm$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\t\t\ttime));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$now);\n\t\t\t\t\t},\n\t\t\t\t\telm$core$Process$spawn(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\t\telm$core$Platform$sendToSelf(router),\n\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$rAF)));\n\t\t\t}\n\t\t} else {\n\t\t\tif (!_n1.b.b) {\n\t\t\t\tvar pid = _n1.a.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (_n3) {\n\t\t\t\t\t\treturn elm$browser$Browser$AnimationManager$init;\n\t\t\t\t\t},\n\t\t\t\t\telm$core$Process$kill(pid));\n\t\t\t} else {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA3(elm$browser$Browser$AnimationManager$State, subs, request, oldTime));\n\t\t\t}\n\t\t}\n\t});\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$browser$Browser$AnimationManager$onSelfMsg = F3(\n\tfunction (router, newTime, _n0) {\n\t\tvar subs = _n0.aA;\n\t\tvar oldTime = _n0._;\n\t\tvar send = function (sub) {\n\t\t\tif (!sub.$) {\n\t\t\t\tvar tagger = sub.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\ttagger(\n\t\t\t\t\t\telm$time$Time$millisToPosix(newTime)));\n\t\t\t} else {\n\t\t\t\tvar tagger = sub.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\ttagger(newTime - oldTime));\n\t\t\t}\n\t\t};\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (pid) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (_n1) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$State,\n\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\telm$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\tnewTime));\n\t\t\t\t\t},\n\t\t\t\t\telm$core$Task$sequence(\n\t\t\t\t\t\tA2(elm$core$List$map, send, subs)));\n\t\t\t},\n\t\t\telm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\telm$core$Platform$sendToSelf(router),\n\t\t\t\t\telm$browser$Browser$AnimationManager$rAF)));\n\t});\nvar elm$browser$Browser$AnimationManager$Delta = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$browser$Browser$AnimationManager$subMap = F2(\n\tfunction (func, sub) {\n\t\tif (!sub.$) {\n\t\t\tvar tagger = sub.a;\n\t\t\treturn elm$browser$Browser$AnimationManager$Time(\n\t\t\t\tA2(elm$core$Basics$composeL, func, tagger));\n\t\t} else {\n\t\t\tvar tagger = sub.a;\n\t\t\treturn elm$browser$Browser$AnimationManager$Delta(\n\t\t\t\tA2(elm$core$Basics$composeL, func, tagger));\n\t\t}\n\t});\n_Platform_effectManagers['Browser.AnimationManager'] = _Platform_createManager(elm$browser$Browser$AnimationManager$init, elm$browser$Browser$AnimationManager$onEffects, elm$browser$Browser$AnimationManager$onSelfMsg, 0, elm$browser$Browser$AnimationManager$subMap);\nvar elm$browser$Browser$AnimationManager$subscription = _Platform_leaf('Browser.AnimationManager');\nvar elm$browser$Browser$AnimationManager$onAnimationFrame = function (tagger) {\n\treturn elm$browser$Browser$AnimationManager$subscription(\n\t\telm$browser$Browser$AnimationManager$Time(tagger));\n};\nvar elm$browser$Browser$Events$onAnimationFrame = elm$browser$Browser$AnimationManager$onAnimationFrame;\nvar elm$browser$Browser$Events$Document = 0;\nvar elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {aq: pids, aA: subs};\n\t});\nvar elm$browser$Browser$Events$init = elm$core$Task$succeed(\n\tA2(elm$browser$Browser$Events$State, _List_Nil, elm$core$Dict$empty));\nvar elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (!node) {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\telm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {ah: event, al: key};\n\t});\nvar elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (!node) {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2(elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, dict) {\n\t\t\t\tvar key = _n0.a;\n\t\t\t\tvar value = _n0.b;\n\t\t\t\treturn A3(elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\telm$core$Dict$empty,\n\t\tassocs);\n};\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(elm$core$Dict$foldl, elm$core$Dict$insert, t2, t1);\n\t});\nvar elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _n6) {\n\t\t\t\tvar deads = _n6.a;\n\t\t\t\tvar lives = _n6.b;\n\t\t\t\tvar news = _n6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA3(elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_n4, pid, _n5) {\n\t\t\t\tvar deads = _n5.a;\n\t\t\t\tvar lives = _n5.b;\n\t\t\t\tvar news = _n5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _n2, _n3) {\n\t\t\t\tvar deads = _n3.a;\n\t\t\t\tvar lives = _n3.b;\n\t\t\t\tvar news = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3(elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2(elm$core$List$map, elm$browser$Browser$Events$addKey, subs);\n\t\tvar _n0 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.aq,\n\t\t\telm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _n0.a;\n\t\tvar livePids = _n0.b;\n\t\tvar makeNewPids = _n0.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\telm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\telm$core$Task$sequence(\n\t\t\t\t\tA2(elm$core$List$map, elm$core$Process$kill, deadPids))));\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _n0, state) {\n\t\tvar key = _n0.al;\n\t\tvar event = _n0.ah;\n\t\tvar toMessage = function (_n2) {\n\t\t\tvar subKey = _n2.a;\n\t\t\tvar _n3 = _n2.b;\n\t\t\tvar node = _n3.a;\n\t\t\tvar name = _n3.b;\n\t\t\tvar decoder = _n3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2(elm$core$List$filterMap, toMessage, state.aA);\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (_n1) {\n\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar decoder = _n0.c;\n\t\treturn A3(\n\t\t\telm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2(elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager(elm$browser$Browser$Events$init, elm$browser$Browser$Events$onEffects, elm$browser$Browser$Events$onSelfMsg, 0, elm$browser$Browser$Events$subMap);\nvar elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn elm$browser$Browser$Events$subscription(\n\t\t\tA3(elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar elm$browser$Browser$Events$onKeyDown = A2(elm$browser$Browser$Events$on, 0, 'keydown');\nvar elm$browser$Browser$Events$onKeyUp = A2(elm$browser$Browser$Events$on, 0, 'keyup');\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar author$project$Main$subscriptions = function (model) {\n\treturn elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$browser$Browser$Events$onKeyDown(\n\t\t\t\tA2(elm$json$Json$Decode$map, author$project$Main$KeyDown, author$project$Main$keyDecoder)),\n\t\t\t\telm$browser$Browser$Events$onKeyUp(\n\t\t\t\tA2(elm$json$Json$Decode$map, author$project$Main$KeyUp, author$project$Main$keyDecoder)),\n\t\t\t\telm$browser$Browser$Events$onAnimationFrame(author$project$Main$UpdateState)\n\t\t\t]));\n};\nvar author$project$Main$paddleSpeed = 8;\nvar elm$core$Basics$min = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) < 0) ? x : y;\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$get, key, dict);\n\t\tif (!_n0.$) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar elm$core$Set$member = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A2(elm$core$Dict$member, key, dict);\n\t});\nvar author$project$Main$getPaddlePositions = function (model) {\n\tvar getPosition = F2(\n\t\tfunction (p, d) {\n\t\t\treturn A2(\n\t\t\t\telm$core$Basics$min,\n\t\t\t\tauthor$project$Main$gameHeight - author$project$Main$paddleHeight,\n\t\t\t\tA2(elm$core$Basics$max, 0, p + d));\n\t\t});\n\tvar getDirection = F2(\n\t\tfunction (up, down) {\n\t\t\treturn (A2(elm$core$Set$member, up, model.s) ? (-1) : 0) + (A2(elm$core$Set$member, down, model.s) ? 1 : 0);\n\t\t});\n\tvar dTwo = author$project$Main$paddleSpeed * A2(getDirection, 'ArrowUp', 'ArrowDown');\n\tvar dOne = author$project$Main$paddleSpeed * A2(getDirection, 'w', 's');\n\treturn _Utils_Tuple2(\n\t\tA2(getPosition, model.v, dOne),\n\t\tA2(getPosition, model.w, dTwo));\n};\nvar author$project$Main$ballSpeed = 4;\nvar author$project$Main$getBallPosition = F2(\n\tfunction (_n0, _n1) {\n\t\tvar px = _n0.a;\n\t\tvar py = _n0.b;\n\t\tvar dx = _n1.a;\n\t\tvar dy = _n1.b;\n\t\tvar ny = A2(\n\t\t\telm$core$Basics$min,\n\t\t\tauthor$project$Main$gameHeight,\n\t\t\tA2(elm$core$Basics$max, 0, py + (author$project$Main$ballSpeed * dy)));\n\t\tvar nx = A2(\n\t\t\telm$core$Basics$min,\n\t\t\tauthor$project$Main$gameWidth,\n\t\t\tA2(elm$core$Basics$max, 0, px + (author$project$Main$ballSpeed * dx)));\n\t\treturn _Utils_Tuple2(nx, ny);\n\t});\nvar author$project$Main$Boundary = 0;\nvar author$project$Main$None = 5;\nvar author$project$Main$PongLeft = 1;\nvar author$project$Main$PongRight = 2;\nvar author$project$Main$ReachLeft = 3;\nvar author$project$Main$ReachRight = 4;\nvar author$project$Main$ballRadius = 5;\nvar author$project$Main$paddleWidth = 10;\nvar author$project$Main$paddleLeft = author$project$Main$paddleWidth;\nvar author$project$Main$paddleRight = author$project$Main$gameWidth - (2 * author$project$Main$paddleWidth);\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$not = _Basics_not;\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar elm$core$Tuple$second = function (_n0) {\n\tvar y = _n0.b;\n\treturn y;\n};\nvar author$project$Main$getIntersection = function (model) {\n\tvar r = author$project$Main$ballRadius;\n\tvar _n0 = _Utils_Tuple2(author$project$Main$paddleWidth, author$project$Main$paddleHeight);\n\tvar pw = _n0.a;\n\tvar ph = _n0.b;\n\tvar _n1 = model.n;\n\tvar bx = _n1.a;\n\tvar by = _n1.b;\n\tvar intersectsBall = function (_n3) {\n\t\tvar x = _n3.a;\n\t\tvar y = _n3.b;\n\t\treturn !((_Utils_cmp(x, bx + r) > 0) || ((_Utils_cmp(x + pw, bx - r) < 0) || ((_Utils_cmp(y, by + r) > 0) || (_Utils_cmp(y + ph, by - r) < 0))));\n\t};\n\tvar intersectionChecks = _List_fromArray(\n\t\t[\n\t\t\t_Utils_Tuple2(\n\t\t\tintersectsBall(\n\t\t\t\t_Utils_Tuple2(author$project$Main$paddleLeft, model.v)),\n\t\t\t1),\n\t\t\t_Utils_Tuple2(\n\t\t\tintersectsBall(\n\t\t\t\t_Utils_Tuple2(author$project$Main$paddleRight, model.w)),\n\t\t\t2),\n\t\t\t_Utils_Tuple2((by - r) <= 0, 0),\n\t\t\t_Utils_Tuple2(\n\t\t\t_Utils_cmp(by + r, author$project$Main$gameHeight) > -1,\n\t\t\t0),\n\t\t\t_Utils_Tuple2((bx - r) <= 0, 3),\n\t\t\t_Utils_Tuple2(\n\t\t\t_Utils_cmp(bx + r, author$project$Main$gameWidth) > -1,\n\t\t\t4)\n\t\t]);\n\tvar intersection = A2(\n\t\telm$core$List$map,\n\t\telm$core$Tuple$second,\n\t\tA2(elm$core$List$filter, elm$core$Tuple$first, intersectionChecks));\n\tvar _n2 = elm$core$List$head(intersection);\n\tif (!_n2.$) {\n\t\tvar result = _n2.a;\n\t\treturn result;\n\t} else {\n\t\treturn 5;\n\t}\n};\nvar author$project$Main$ballReflectAngle = 60;\nvar elm$core$Basics$cos = _Basics_cos;\nvar elm$core$Basics$pi = _Basics_pi;\nvar elm$core$Basics$degrees = function (angleInDegrees) {\n\treturn (angleInDegrees * elm$core$Basics$pi) / 180;\n};\nvar elm$core$Basics$sin = _Basics_sin;\nvar author$project$Main$getReflection = F2(\n\tfunction (model, intersection) {\n\t\tvar yReflect = function (relative) {\n\t\t\treturn elm$core$Basics$sin(\n\t\t\t\telm$core$Basics$degrees(relative * author$project$Main$ballReflectAngle));\n\t\t};\n\t\tvar xReflect = function (relative) {\n\t\t\treturn elm$core$Basics$cos(\n\t\t\t\telm$core$Basics$degrees(relative * author$project$Main$ballReflectAngle));\n\t\t};\n\t\tvar paddleSpan = author$project$Main$paddleHeight / 2;\n\t\tvar _n0 = _Utils_Tuple2(model.v, model.w);\n\t\tvar y1 = _n0.a;\n\t\tvar y2 = _n0.b;\n\t\tvar _n1 = model.n;\n\t\tvar by = _n1.b;\n\t\tvar relativeLeft = ((y1 + paddleSpan) - by) / paddleSpan;\n\t\tvar relativeRight = ((y2 + paddleSpan) - by) / paddleSpan;\n\t\tswitch (intersection) {\n\t\t\tcase 1:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\txReflect(relativeLeft),\n\t\t\t\t\t-yReflect(relativeLeft));\n\t\t\tcase 2:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t-xReflect(relativeRight),\n\t\t\t\t\t-yReflect(relativeRight));\n\t\t\tdefault:\n\t\t\t\treturn model.r;\n\t\t}\n\t});\nvar author$project$Main$updateState = function (model) {\n\tvar pb = model.n;\n\tvar intersection = author$project$Main$getIntersection(model);\n\tvar rd = A2(author$project$Main$getReflection, model, intersection);\n\tvar initial = _Utils_update(\n\t\tmodel,\n\t\t{n: author$project$Main$initialBallPosition, v: author$project$Main$initialPosition, w: author$project$Main$initialPosition});\n\tvar _n0 = author$project$Main$getPaddlePositions(model);\n\tvar pLeft = _n0.a;\n\tvar pRight = _n0.b;\n\tvar movedPaddles = _Utils_update(\n\t\tmodel,\n\t\t{v: pLeft, w: pRight});\n\tvar db = model.r;\n\tvar dx = db.a;\n\tvar dy = db.b;\n\tswitch (intersection) {\n\t\tcase 3:\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tinitial,\n\t\t\t\t\t{\n\t\t\t\t\t\tr: _Utils_Tuple2(-1, 0),\n\t\t\t\t\t\tO: model.O + 1\n\t\t\t\t\t}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\tcase 4:\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tinitial,\n\t\t\t\t\t{\n\t\t\t\t\t\tr: _Utils_Tuple2(1, 0),\n\t\t\t\t\t\tN: model.N + 1\n\t\t\t\t\t}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\tcase 0:\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tmovedPaddles,\n\t\t\t\t\t{\n\t\t\t\t\t\tr: _Utils_Tuple2(dx, -dy),\n\t\t\t\t\t\tn: A2(\n\t\t\t\t\t\t\tauthor$project$Main$getBallPosition,\n\t\t\t\t\t\t\tpb,\n\t\t\t\t\t\t\t_Utils_Tuple2(dx, -dy))\n\t\t\t\t\t}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\tcase 5:\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tmovedPaddles,\n\t\t\t\t\t{\n\t\t\t\t\t\tn: A2(author$project$Main$getBallPosition, pb, db)\n\t\t\t\t\t}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\tdefault:\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tmovedPaddles,\n\t\t\t\t\t{\n\t\t\t\t\t\tr: rd,\n\t\t\t\t\t\tn: A2(author$project$Main$getBallPosition, pb, rd)\n\t\t\t\t\t}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t}\n};\nvar elm$core$Set$insert = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A3(elm$core$Dict$insert, key, 0, dict);\n\t});\nvar elm$core$Dict$getMin = function (dict) {\n\tgetMin:\n\twhile (true) {\n\t\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\t\tvar left = dict.d;\n\t\t\tvar $temp$dict = left;\n\t\t\tdict = $temp$dict;\n\t\t\tcontinue getMin;\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t}\n};\nvar elm$core$Dict$moveRedLeft = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.e.d.$ === -1) && (!dict.e.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n1 = dict.d;\n\t\t\tvar lClr = _n1.a;\n\t\t\tvar lK = _n1.b;\n\t\t\tvar lV = _n1.c;\n\t\t\tvar lLeft = _n1.d;\n\t\t\tvar lRight = _n1.e;\n\t\t\tvar _n2 = dict.e;\n\t\t\tvar rClr = _n2.a;\n\t\t\tvar rK = _n2.b;\n\t\t\tvar rV = _n2.c;\n\t\t\tvar rLeft = _n2.d;\n\t\t\tvar _n3 = rLeft.a;\n\t\t\tvar rlK = rLeft.b;\n\t\t\tvar rlV = rLeft.c;\n\t\t\tvar rlL = rLeft.d;\n\t\t\tvar rlR = rLeft.e;\n\t\t\tvar rRight = _n2.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\trlK,\n\t\t\t\trlV,\n\t\t\t\tA5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\trlL),\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n4 = dict.d;\n\t\t\tvar lClr = _n4.a;\n\t\t\tvar lK = _n4.b;\n\t\t\tvar lV = _n4.c;\n\t\t\tvar lLeft = _n4.d;\n\t\t\tvar lRight = _n4.e;\n\t\t\tvar _n5 = dict.e;\n\t\t\tvar rClr = _n5.a;\n\t\t\tvar rK = _n5.b;\n\t\t\tvar rV = _n5.c;\n\t\t\tvar rLeft = _n5.d;\n\t\t\tvar rRight = _n5.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar elm$core$Dict$moveRedRight = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.d.d.$ === -1) && (!dict.d.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n1 = dict.d;\n\t\t\tvar lClr = _n1.a;\n\t\t\tvar lK = _n1.b;\n\t\t\tvar lV = _n1.c;\n\t\t\tvar _n2 = _n1.d;\n\t\t\tvar _n3 = _n2.a;\n\t\t\tvar llK = _n2.b;\n\t\t\tvar llV = _n2.c;\n\t\t\tvar llLeft = _n2.d;\n\t\t\tvar llRight = _n2.e;\n\t\t\tvar lRight = _n1.e;\n\t\t\tvar _n4 = dict.e;\n\t\t\tvar rClr = _n4.a;\n\t\t\tvar rK = _n4.b;\n\t\t\tvar rV = _n4.c;\n\t\t\tvar rLeft = _n4.d;\n\t\t\tvar rRight = _n4.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\tA5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tlRight,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n5 = dict.d;\n\t\t\tvar lClr = _n5.a;\n\t\t\tvar lK = _n5.b;\n\t\t\tvar lV = _n5.c;\n\t\t\tvar lLeft = _n5.d;\n\t\t\tvar lRight = _n5.e;\n\t\t\tvar _n6 = dict.e;\n\t\t\tvar rClr = _n6.a;\n\t\t\tvar rK = _n6.b;\n\t\t\tvar rV = _n6.c;\n\t\t\tvar rLeft = _n6.d;\n\t\t\tvar rRight = _n6.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar elm$core$Dict$removeHelpPrepEQGT = F7(\n\tfunction (targetKey, dict, color, key, value, left, right) {\n\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\tvar _n1 = left.a;\n\t\t\tvar lK = left.b;\n\t\t\tvar lV = left.c;\n\t\t\tvar lLeft = left.d;\n\t\t\tvar lRight = left.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tlLeft,\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));\n\t\t} else {\n\t\t\t_n2$2:\n\t\t\twhile (true) {\n\t\t\t\tif ((right.$ === -1) && (right.a === 1)) {\n\t\t\t\t\tif (right.d.$ === -1) {\n\t\t\t\t\t\tif (right.d.a === 1) {\n\t\t\t\t\t\t\tvar _n3 = right.a;\n\t\t\t\t\t\t\tvar _n4 = right.d;\n\t\t\t\t\t\t\tvar _n5 = _n4.a;\n\t\t\t\t\t\t\treturn elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _n2$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n6 = right.a;\n\t\t\t\t\t\tvar _n7 = right.d;\n\t\t\t\t\t\treturn elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _n2$2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dict;\n\t\t}\n\t});\nvar elm$core$Dict$removeMin = function (dict) {\n\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\tvar color = dict.a;\n\t\tvar key = dict.b;\n\t\tvar value = dict.c;\n\t\tvar left = dict.d;\n\t\tvar lColor = left.a;\n\t\tvar lLeft = left.d;\n\t\tvar right = dict.e;\n\t\tif (lColor === 1) {\n\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\tvar _n3 = lLeft.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\telm$core$Dict$removeMin(left),\n\t\t\t\t\tright);\n\t\t\t} else {\n\t\t\t\tvar _n4 = elm$core$Dict$moveRedLeft(dict);\n\t\t\t\tif (_n4.$ === -1) {\n\t\t\t\t\tvar nColor = _n4.a;\n\t\t\t\t\tvar nKey = _n4.b;\n\t\t\t\t\tvar nValue = _n4.c;\n\t\t\t\t\tvar nLeft = _n4.d;\n\t\t\t\t\tvar nRight = _n4.e;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\telm$core$Dict$removeMin(nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\telm$core$Dict$removeMin(left),\n\t\t\t\tright);\n\t\t}\n\t} else {\n\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t}\n};\nvar elm$core$Dict$removeHelp = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t} else {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_cmp(targetKey, key) < 0) {\n\t\t\t\tif ((left.$ === -1) && (left.a === 1)) {\n\t\t\t\t\tvar _n4 = left.a;\n\t\t\t\t\tvar lLeft = left.d;\n\t\t\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\t\t\tvar _n6 = lLeft.a;\n\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\t\tright);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n7 = elm$core$Dict$moveRedLeft(dict);\n\t\t\t\t\t\tif (_n7.$ === -1) {\n\t\t\t\t\t\t\tvar nColor = _n7.a;\n\t\t\t\t\t\t\tvar nKey = _n7.b;\n\t\t\t\t\t\t\tvar nValue = _n7.c;\n\t\t\t\t\t\t\tvar nLeft = _n7.d;\n\t\t\t\t\t\t\tvar nRight = _n7.e;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\t\t\tnColor,\n\t\t\t\t\t\t\t\tnKey,\n\t\t\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, nLeft),\n\t\t\t\t\t\t\t\tnRight);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\tright);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Dict$removeHelpEQGT,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\tA7(elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$removeHelpEQGT = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -1) {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_eq(targetKey, key)) {\n\t\t\t\tvar _n1 = elm$core$Dict$getMin(right);\n\t\t\t\tif (_n1.$ === -1) {\n\t\t\t\t\tvar minKey = _n1.b;\n\t\t\t\t\tvar minValue = _n1.c;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tminKey,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\telm$core$Dict$removeMin(right));\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tleft,\n\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, right));\n\t\t\t}\n\t\t} else {\n\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t}\n\t});\nvar elm$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$removeHelp, key, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Set$remove = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A2(elm$core$Dict$remove, key, dict);\n\t});\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tvar _n0 = author$project$Main$getPaddlePositions(model);\n\t\tvar pOne = _n0.a;\n\t\tvar pTwo = _n0.b;\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\tvar k = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ts: A2(elm$core$Set$remove, k, model.s)\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar k = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ts: A2(elm$core$Set$insert, k, model.s)\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\treturn author$project$Main$updateState(model);\n\t\t}\n\t});\nvar elm$core$String$fromFloat = _String_fromNumber;\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$html$Html$h1 = _VirtualDom_node('h1');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar elm$svg$Svg$circle = elm$svg$Svg$trustedNode('circle');\nvar elm$svg$Svg$rect = elm$svg$Svg$trustedNode('rect');\nvar elm$svg$Svg$svg = elm$svg$Svg$trustedNode('svg');\nvar elm$svg$Svg$text = elm$virtual_dom$VirtualDom$text;\nvar elm$svg$Svg$text_ = elm$svg$Svg$trustedNode('text');\nvar elm$svg$Svg$Attributes$cx = _VirtualDom_attribute('cx');\nvar elm$svg$Svg$Attributes$cy = _VirtualDom_attribute('cy');\nvar elm$svg$Svg$Attributes$fontSize = _VirtualDom_attribute('font-size');\nvar elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar elm$svg$Svg$Attributes$r = _VirtualDom_attribute('r');\nvar elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar author$project$Main$view = function (model) {\n\tvar pw = elm$core$String$fromInt(author$project$Main$paddleWidth);\n\tvar ph = elm$core$String$fromInt(author$project$Main$paddleHeight);\n\tvar _n0 = model.n;\n\tvar bx = _n0.a;\n\tvar by = _n0.b;\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$h1,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Elm Pong')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$width(\n\t\t\t\t\t\telm$core$String$fromInt(author$project$Main$gameWidth)),\n\t\t\t\t\t\telm$svg$Svg$Attributes$height(\n\t\t\t\t\t\telm$core$String$fromInt(author$project$Main$gameHeight)),\n\t\t\t\t\t\telm$svg$Svg$Attributes$viewBox(\n\t\t\t\t\t\t'0 0 ' + (elm$core$String$fromInt(author$project$Main$gameWidth) + (' ' + elm$core$String$fromInt(author$project$Main$gameHeight))))\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$svg$Svg$rect,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(author$project$Main$paddleLeft)),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$y(\n\t\t\t\t\t\t\t\telm$core$String$fromFloat(model.v)),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$width(pw),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$height(ph)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$svg$Svg$rect,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(author$project$Main$paddleRight)),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$y(\n\t\t\t\t\t\t\t\telm$core$String$fromFloat(model.w)),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$width(pw),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$height(ph)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$svg$Svg$circle,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$cx(\n\t\t\t\t\t\t\t\telm$core$String$fromFloat(bx)),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$cy(\n\t\t\t\t\t\t\t\telm$core$String$fromFloat(by)),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$r(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(author$project$Main$ballRadius))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$svg$Svg$text_,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(((author$project$Main$gameWidth / 2) | 0) - 100)),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$y('100'),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$fontSize('50px')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$svg$Svg$text(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(model.N))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$svg$Svg$text_,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(((author$project$Main$gameWidth / 2) | 0) + 100)),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$y('100'),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$fontSize('50px')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$svg$Svg$text(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(model.O))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\taP: function (_n0) {\n\t\t\treturn author$project$Main$init;\n\t\t},\n\t\taW: author$project$Main$subscriptions,\n\t\taY: author$project$Main$update,\n\t\ta_: author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}